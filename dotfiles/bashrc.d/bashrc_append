
# If I have fzf ...
if [ x$(which fzf) != "x" ]; then
  # There is 2 parts
  # one for the tab completion, not sure really how to unlock it but ...
  # one for the kye binding like ctrl-r ctrl-t
  if [ -f /usr/share/doc/fzf/examples/completion.bash ]; then
    source /usr/share/doc/fzf/examples/completion.bash
  else
    if [ -f /usr/share/bash-completion/completions/fzf ]; then
      source /usr/share/bash-completion/completions/fzf
    fi
  fi
  if [ -f /usr/share/doc/fzf/examples/key-bindings.bash ]; then
    source /usr/share/doc/fzf/examples/key-bindings.bash
  fi
  if [ -f /usr/share/fzf/shell/key-bindings.bash ]; then
    source /usr/share/fzf/shell/key-binding.bash
  fi


  export FZF_DEFAULT_COMMAND='ag --nocolor -g ""'
  export FZF_CTRL_T_COMMAND="$FZF_DEFAULT_COMMAND"
  export FZF_DEFAULT_OPTS='
  --color fg:242,bg:236,hl:65,fg+:15,bg+:239,hl+:108
  --color info:108,prompt:109,spinner:108,pointer:168,marker:168
  '
fi

# I always type vi rather than vim ...
if [ -n "$(which vim)" ]; then
  alias vi='vim'
fi

if [ -e $HOME/.bashrc.d/scm-prompt.sh ]; then
  source $HOME/.bashrc.d/scm-prompt.sh
else
  prompt_file1=/usr/lib/git-core/git-sh-prompt
  prompt_file2=/usr/share/git-core/contrib/completion/git-prompt.sh
  if [ -e $prompt_file1 ]; then
    prompt_file=$prompt_file1
  fi
  if [ -e $prompt_file2 ]; then
    prompt_file=$prompt_file2
  fi
  source $prompt_file
  function _dotfiles_scm_info ()
  {
    __git_ps1 " (%s)"
  }
fi

function prompt-show-status ()
{
  # Don't use `status'.  It's read-only in zsh.
  local stat="$?"

  if test $stat -ne 0 -a $stat != 128; then
    # If process exited by a signal, determine name of signal.
    if test $stat -gt 128; then
      local signal="$(builtin kill -l $[$stat - 128] 2>/dev/null)"
      test "$signal" && signal=" ($signal)"
    fi
    echo "(╥_╥) $stat$signal "
  else
    #echo "¯\\_(ツ)_/¯"
    echo "(ok)"
  fi
  #test "$BASH" && history -a
  return 0
}

source $HOME/.bashrc.d/term_colors
export PS1="$N[$MC\t$N]──[$MR\u$N@$MB\h$N]:$MG\w $N\$\n\
└──$N\$(prompt-show-status)$N$MM\$(_dotfiles_scm_info) $N\$ "
if [ -n "$(which vim)" ]; then
  export EDITOR=vim
fi
