# Ian's .tmux.conf
#
# Note for OSX & iTerm: Enable "Applications in terminal may access clipboard" setting in prefs.
#

# Use X as the leader key, not B
unbind "C-b"
set -g prefix "C-x"
bind "x" send-prefix

set -g bell-action none
set -g visual-bell off
set -g display-panes-time 2000
set -g mouse on

set-option -s set-clipboard on
# As I'm used in screen
bind "C-d" detach
bind "C-x" last-window

# Join pane command - https://unix.stackexchange.com/a/14301/16225
# bind "g" command-prompt -p "Join pane from:"  "join-pane -s ':%%'"
# bind "C-s" command-prompt -p "Send pane to:"  "join-pane -t ':%%'"

# Vim-like bindings
setw -g mode-keys vi
bind "n" next-window
bind "p" previous-window
bind "C-n" next-window
bind "C-p" previous-window
bind "s" split-window -v
bind "v" split-window -h
bind "j" select-pane -D
bind "k" select-pane -U
bind "h" select-pane -L
bind "l" select-pane -R
bind-key r source-file ~/.tmux.conf \;  display-message "source-file done"
bind -r "C-j" select-pane -D
bind -r "C-k" select-pane -U
bind -r "C-h" select-pane -L
bind -r "C-l" select-pane -R
#bind "=" select-layout tiled
#bind "!" break-pane
#bind \; choose-tree

# Screen-like bindings
bind '"' choose-window
bind "A" command-prompt "rename-window '%%'"
bind "Escape" copy-mode

# A nice C-r in VI mode
# command-prompt will prompt in tmux,
# -i is to execute every time the input changes (type a char)¬∑
# -I to prepopulate with the content of pane_search_string which is it the last search strin
# -p is for the prompt(s)¬∑
# send -X is the template command that is executed at every input that is to say
# sending in copy mode (-X) search-backward-incremental with the content of what was typed being
# quotation escaped (%%%)
bind-key -T copy-mode-vi 'C-r' command-prompt -i -I "#{pane_search_string}" -p "(search up)" "send -X search-backward-incremental \"%%%\""

set -g word-separators " @:"
# Double clicking selects the word also when not in copy-mode.
bind-key -T root DoubleClick1Pane  select-pane \; copy-mode \; send-keys -X select-word

# fix ssh agent when tmux is detached
# This should work but only for new session existing one still use the same values
# setenv is also not working when the session is created it complains, setenv -g is not complaining
# but not doing the job, TL;DR it's not great ...
#set -g update-environment SSH_AUTH_SOCK
# Try something to copy things in tmux
# yank="~/.tmux.d/yank"

# bind -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel "$yank"

## Colors - derived from Powerline Double Cyan by Jim Myhrberg
#set -g status-interval 0
#
## List of plugins
#set -g @plugin 'tmux-plugins/tpm'
#set -g @plugin 'tmux-plugins/tmux-sensible'
#set -g @plugin 'tmux-plugins/tmux-yank'
#set -g @plugin 'tmux-plugins/tmux-pain-control'
#
#set -g @continuum-restore 'on'
#
## Other examples:
## set -g @plugin 'github_username/plugin_name'
## set -g @plugin 'git@github.com/user/plugin'
## set -g @plugin 'git@bitbucket.com/user/plugin'
#

# Start window and pane indices at 1.
set -g base-index 1
set -g pane-base-index 0

# Length of tmux status line
set -g status-left-length 30
set -g status-right-length 150

set-option -g status "on"

# Default statusbar color
set-option -g status-style bg=colour237,fg=colour223 # bg=bg1, fg=fg1

# Default window title colors
set-window-option -g window-status-style bg=colour214,fg=colour237 # bg=yellow, fg=bg1

# Default window with an activity alert
set-window-option -g window-status-activity-style bg=colour237,fg=colour248 # bg=bg1, fg=fg3

# Active window title colors
set-window-option -g window-status-current-style bg=red,fg=colour237 # fg=bg1

# Set active pane border color
set-option -g pane-active-border-style fg=colour214

# Set inactive pane border color
set-option -g pane-border-style fg=colour239

# Message info
set-option -g message-style bg=colour239,fg=colour223 # bg=bg2, fg=fg1

# Writing commands inactive
set-option -g message-command-style bg=colour239,fg=colour223 # bg=fg3, fg=bg1

# Pane number display
set-option -g display-panes-active-colour colour1 #fg2
set-option -g display-panes-colour colour237 #bg1

# Clock
set-window-option -g clock-mode-colour colour109 #blue

# Bell
set-window-option -g window-status-bell-style bg=colour167,fg=colour235 # bg=red, fg=bg

set-option -g status-left "\
#[fg=colour7, bg=colour241]#{?client_prefix,#[bg=colour167],} ‚ùê #S \
#[fg=colour241, bg=colour237]#{?client_prefix,#[fg=colour167],}ÓÇ∞#{?window_zoomed_flag, üîç,}"

#set-option -g status-right "\
#[fg=colour214, bg=colour237] ÓÇ≤\
#[fg=colour237, bg=colour214] #(~/dotfiles/tmux_scripts/music.sh) ÓÇ≤\
#[fg=colour223, bg=colour237] #(~/dotfiles/tmux_scripts/uptime.sh) \
#[fg=colour246, bg=colour237] ÓÇ≥ %b %d '%y\
#[fg=colour109] ÓÇ≥ %H:%M \
#[fg=colour248, bg=colour239]"

set-window-option -g window-status-current-format "\
#[fg=colour237, bg=colour214]ÓÇ∞\
#[fg=colour239, bg=colour214] #I* ÓÇ±\
#[fg=colour239, bg=colour214, bold] #W \
#[fg=colour214, bg=colour237]ÓÇ∞"

set-window-option -g window-status-format "\
#[fg=colour237,bg=colour239,noitalics]ÓÇ∞\
#[fg=colour223,bg=colour239] #I ÓÇ±\
#[fg=colour223, bg=colour239] #W \
#[fg=colour239, bg=colour237]ÓÇ∞"

# Set the history limit so we get lots of scrollback.
setw -g history-limit 40000

## Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
#run '~/.tmux/plugins/tpm/tpm'
set -g focus-events on
# Disable tmux mouse support when entering Vim
set-hook -g pane-focus-in "if-shell -F -t = '#{==:#{pane_current_command},vim}' 'set -g mouse off' 'set -g mouse on'"
set-hook -g pane-focus-out "if-shell -F -t = '#{==:#{pane_current_command},#{@vim}}' 'set -g mouse on'"
